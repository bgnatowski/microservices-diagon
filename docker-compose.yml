version: "3.8"
services:
  postgres-customer:
    container_name: postgres-customer
    image: postgres:14.7
    environment:
      POSTGRES_USER: bgnat
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres-customer-volume:/data/postgres
      - ./db_inits/init_customer.sql:/docker-entrypoint-initdb.d/init_customer.sql
    ports:
      - "5432:5432"
    networks:
      - postgres-customer-network
    restart: unless-stopped

  postgres-fraud:
    container_name: postgres-fraud
    image: postgres:14.7
    environment:
      POSTGRES_USER: bgnat
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres-fraud-volume:/data/postgres
      - ./db_inits/init_fraud.sql:/docker-entrypoint-initdb.d/init_fraud.sql
    ports:
      - "5433:5432"
    networks:
      - postgres-fraud-network
    restart: unless-stopped

  postgres-order:
    container_name: postgres-order
    image: postgres:14.7
    environment:
      POSTGRES_USER: bgnat
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres-order-volume:/data/postgres
      - ./db_inits/init_orders.sql:/docker-entrypoint-initdb.d/init_orders.sql
    ports:
       - "5435:5432"
    networks:
      - postgres-order-network
    restart: unless-stopped

  postgres-inventory:
    container_name: postgres-inventory
    image: postgres:14.7
    environment:
      POSTGRES_USER: bgnat
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres-inventory-volume:/data/postgres
      - ./db_inits/init_inventory.sql:/docker-entrypoint-initdb.d/init_inventory.sql
    ports:
      - "5436:5432"
    networks:
      - postgres-inventory-network
    restart: unless-stopped

  mongo-product:
    container_name: mongo-product
    image: mongo:6.0.7
    environment:
      - MONGO_INITDB_ROOT_USERNAME=bgnat
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=product
    volumes:
      - mongodb:/data
    ports:
      - "27017:27017"
    networks:
      - mongodb
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres-fraud-network
      - postgres-customer-network
      - postgres-order-network
    restart: unless-stopped

  keycloak-server:
    container_name: auth-keycloak
    image: quay.io/keycloak/keycloak:22.0.0
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "8181:8080"
    command:
      - start-dev
    restart: unless-stopped

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - spring

networks:
  postgres-customer-network:
    driver: bridge
  postgres-fraud-network:
    driver: bridge
  postgres-order-network:
    driver: bridge
  postgres-inventory-network:
    driver: bridge
  mongodb:
    driver: bridge
  keycloak-network:
    driver: bridge
  spring:
    driver: bridge

volumes:
  postgres-customer-volume:
  postgres-fraud-volume:
  postgres-order-volume:
  postgres-inventory-volume:
  mongodb: {}
  pgadmin: